syntax = "proto3";

package pb;

option java_multiple_files = true;
option java_package = "com.yutiandou.manager.proto";
option java_outer_classname = "Message";

import "google/protobuf/struct.proto";

enum TaskStatus{
  TaskStatus_KEEP = 0; //保留
  TaskStatus_CREATED = 1; //新建
  TaskStatus_INITIALIZED = 2; //初始化完成
  TaskStatus_LAUNCHING = 3; //开始分发
  TaskStatus_STOP = 4; //停止
  TaskStatus_OVER = 5; //结束
  TaskStatus_CLOSE = 6; //关闭
}

enum TaskType{
  Keep = 0;  //go和rust中0值处理问题
  Batch = 1; //批处理任务
  Timing = 2; //定时任务
  Election = 3; //状态集群任务
}

message Task {
  string task_code = 1;
  string task_name = 2;
  string description = 3; //描述
  int64 start_time = 4;  //utc 开始时间
  int64 end_time = 5; //utc 结束时间
  int64 create_time = 6; //utc 创建时间
  TaskType type = 7;
  TaskStatus status = 8;
  string config = 9; //任务触发的时候会传递给执行者
  repeated string tags = 10;
  DispatchPolicy policy = 11;

  repeated SubTask sub_tasks = 100; //子任务 被调度的单元
}

enum SubTaskStatus{
  SubTaskStatus_RETAIN = 0; //新建
  SubTaskStatus_CREATE = 1; //新建
  SubTaskStatus_DISPATCHING = 2; //被调度
  SubTaskStatus_COMPLETE = 3; //完成
  SubTaskStatus_FAILED = 4; //失败  不再重新调度
}

message SubTask{
  string sub_task_code = 1;
  string sub_task_name = 2;
  string description = 3;
  SubTaskStatus status = 4;
  int64 create_time = 6;
  int64 last_dispatch_time = 7; //上次被调度的时间
  uint32 version = 8; //版本号，随着调度次数增加
  string extern = 9; //扩展信息
}
//----------------调度策略-----------------

message DispatchPolicy {
  string policy_code = 1; //调度策略
  bool wait_call_back = 2; //是否等待消息回调
  int64 task_timeout = 3; //任务被调度后，等待确认的超时时间
}

//----------------- 工人的唯一标识---------------------

message Worker{
  string code = 1; //工人的唯一标识
}

//----------------interface common struct-----------------

message CommonResponse{
  CommonResult result = 1;
}
message CommonResult{
  int32 code = 1;   //200 ：success
  string message = 2;
  google.protobuf.Struct payload = 3;
}