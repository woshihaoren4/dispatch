syntax = "proto3";
package pb;
import "message.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

service TaskManager {
  //创建任务
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse){
    option (google.api.http) = {
      post: "/api/v1/task/create"
      body: "*"
    };
  }
  //修改任务
  rpc UpdateTask(UpdateTaskRequest) returns(UpdateTaskResponse){
    option (google.api.http) = {
      post: "/api/v1/task/{task_id}/update/{action}"
      body: "*"
    };
  }
  //查询任务
  rpc SearchTask(SearchTaskRequest)returns(SearchTaskResponse){
    option (google.api.http) = {
      post: "/api/v1/task/search"
      body: "*"
    };
  }
  //查询子任务
  rpc SearchSubTask(SearchSubTaskRequest)returns(SearchSubTaskResponse){
    option (google.api.http) = {
      post: "/api/v1/task/search"
      body: "*"
    };
  }

}
message CreateTaskRequest {
  Task task = 1;
}
message CreateTaskResponse{
  string task_id = 1;
  string create_time = 2;
  CommonResult result = 100;
}
enum UpdateTaskAction {
  UPDATE_STATUS = 0;
  UPDATE_TASK_INFO = 1;
  APPEND_SUBTASKS = 2;
  UPDATE_SUBTASK_INFO = 3;
}

message UpdateTaskInfoValue{
  map<string, google.protobuf.Value> values = 1;
}
message UpdateSubTask{
  repeated SubTask sub_tasks = 1;
}
message UpdateSubTaskInfoValue{
  string sub_task_id = 1;
  map<string, google.protobuf.Value> values = 2;
}
message UpdateTaskRequest{
  string task_id = 1;
  UpdateTaskAction action = 2;
  oneof update_content{
    TaskStatus status = 100;
    UpdateTaskInfoValue task_values = 101;
    UpdateSubTask sub_tasks = 102;
    UpdateSubTaskInfoValue sub_task_values = 103;
  }
}
message UpdateTaskResponse{
  CommonResult result = 100;
}
message SearchTaskRequest{
  string task_id = 1;
  string name = 2;
  TaskType type = 3;
  TaskStatus status = 4;
  string start_time = 5;
  string end_time = 6;
  int32 size = 7;
  int32 page = 8;
  string sort = 9; //default:"create_time desc"
}
message SearchTaskResponse{
  repeated Task tasks = 1;
  int32 total = 2;
  CommonResult result = 100;
}
message SearchSubTaskRequest{
  string sub_task_id = 1;
  string sub_name = 2;
  string task_id = 3; //父任务的id
  SubTaskStatus status = 4;
  string start_time = 5;
  string end_time = 6;
  int32 size = 7;
  int32 page = 8;
  string sort = 9; //default:"create_time desc"
}
message SearchSubTaskResponse{
  repeated SubTask tasks = 1;
  int32 total = 2;
  CommonResult result = 100;
}